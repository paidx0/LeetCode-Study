### 思路

只要那个节点是true，向上一直将父节点同化，那么路径就等于：每两个连接（子、父都为true）的点的那条线*2 后的和

### 代码

* cpp

```cpp
class Solution {
public:
    int minTime(int n, vector<vector<int>>& edges, vector<bool>& hasApple) {
        int i,res=0;
        //若子节点为true，则父节点同化为true
        for(i=edges.size()-1; i>=0; i--) 
            if(hasApple[edges[i][1]]==true) 
                hasApple[edges[i][0]]=true; 
        // 收集苹果的路径即为所有节点为true的拓扑图的所有连线*2      
        for(i=0; i<edges.size(); i++) 
            if(hasApple[edges[i][1]]==true) res +=2;
        return res;
    }
};
```

![image.png](https://pic.leetcode-cn.com/05d652c46bd5fe9bfa575324fa092dae709194b1637706c3a7c0a1a2d7ef0f81-image.png)

